version: '3.9'

services:
  frontend:
    build:
      context: ../../
      dockerfile: apps/frontend/Dockerfile
    image: ghcr.io/paypay/frontend:latest
    restart: unless-stopped
    env_file:
      - ../../infra/env/.env
    environment:
      NODE_ENV: production
    depends_on:
      - bff
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "fetch('http://localhost:3000/').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - paynet

  bff:
    build:
      context: ../../
      dockerfile: apps/bff/Dockerfile
    image: ghcr.io/paypay/bff:latest
    restart: unless-stopped
    env_file:
      - ../../infra/env/.env
    environment:
      NODE_ENV: production
    depends_on:
      - redis
      - postgres
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "fetch('http://localhost:4000/healthz').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - paynet

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - redis-data:/data
    networks:
      - paynet
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: paypay
      POSTGRES_USER: paypay
      POSTGRES_PASSWORD: paypay
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - paynet
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U paypay']
      interval: 10s
      timeout: 5s
      retries: 5

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - '443:443'
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config
    env_file:
      - ../../infra/env/.env
    depends_on:
      - frontend
      - bff
    networks:
      - paynet
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider https://localhost/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  paynet:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  caddy-data:
  caddy-config:
