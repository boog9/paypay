#!/usr/bin/env node
import { writeFile } from 'node:fs/promises';
import { fileURLToPath } from 'node:url';
import { dirname, resolve } from 'node:path';
import process from 'node:process';
import { openapiTS } from 'openapi-typescript';

const here = dirname(fileURLToPath(import.meta.url));
const baseUrl = process.env.OPENAPI_URL || process.env.BTCPAY_URL;

if (!baseUrl) {
  console.error('Missing OPENAPI_URL or BTCPAY_URL environment variable.');
  process.exit(1);
}

const specUrl = new URL('/swagger/v1/swagger.json', baseUrl).toString();

try {
  const response = await fetch(specUrl);
  if (!response.ok) {
    throw new Error(`Failed to download schema (${response.status} ${response.statusText})`);
  }
  const schema = await response.json();
  const output = await openapiTS(schema, {
    alphabetize: true,
    exportType: true,
    version: 3
  });
  const target = resolve(here, '../src/gen/btcpay.d.ts');
  const header = '// Generated by openapi-typescript. Do not edit manually.\n';
  await writeFile(target, header + output, 'utf8');
  console.log(`BTCPay types generated from ${specUrl} -> ${target}`);
} catch (error) {
  console.error(error instanceof Error ? error.message : error);
  process.exit(1);
}
